spring.profiles.active: @profileActive@

mybatis:
  config-location: classpath:mybatis-config.xml
  mapper-locations: classpath*:com/enlink/auth/dao/mapper/xml/*Mapper.xml
  type-aliases-package: com.enlink.auth.dao.entity

data.url: 127.0.0.1:3306
data.username: myuser
data.userpassword: mypassword

# 关闭actuator的安全管理
management.security.enabled: false

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://${data.url}/micro_auth?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
    username: ${data.username}
    password: ${data.userpassword}
    tomcat:
      max-active: 20
      max-idle: 10
      min-idle: 1
      test-on-borrow: true
      test-while-idle: true
      validation-query: select 1

# auth_center本身是个微服务，因为它提供获取密钥和微信授权这样的服务
enlink:
  # 授权中心作为微服务的相关配置
  authserver:
    # 微服务名，必须配置
    serverName: micro_auth
    # 需要进行微服务Token检查的路径列表，根据需要配置
    needMicroTokenCheckPaths:
      # 获取密钥接口
      - /auth/secret
      - /customerOauth/**
  authcenter:
    # 授权中心的相关业务配置
    business:
      resource:
        # 这是测试环境配置
        - resourceId: mcxz
          appId: wx88a1f4cc15c46d16
          appKey: 42d58166dc405d70b78944a5311f7204
          source: weichat
